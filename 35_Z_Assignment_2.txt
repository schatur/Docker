Your fruit stand company has some software that calculates and serves a list of products and their prices, taking into account items that are on sale and how the sales affect the total price. This software consists of three components: a base-price component which serves the base prices of fruits sold by the fruit stand, a sales component which provides a list of items that are on sale and how much each item is discounted, and a total-price component which communicates with the other two and calculates the final price for each item.

These components have been running on a single Docker host, but as your business is expanding, it is time to upgrade to a swarm cluster for greater flexibility. Run these three application components as services in your swarm cluster, and provide them with a custom overlay network to facilitate isolated communication between them.

Configure these application components on the Swarm cluster so that the following specifications are met:
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Create an overlay network called prices-overlay-net.
   $ docker network create --driver overlay prices-overlay-net
cyo2fzung5uqognj57uzeu9kc
   
Create a service called base-price with 3 replicas using the linuxacademycontent/prices-base-price:1 image. Configure the service to use the prices-overlay-net network.
   $ docker service create --name base-price --publish target=80,published=81 --replicas=3 --network prices-overlay-net linuxacademycontent/prices-base-price:1
ooggkep09c4bjfj3cyicpf2ln
overall progress: 0 out of 3 tasks
overall progress: 3 out of 3 tasks
1/3: running   [==================================================>]
2/3: running   [==================================================>]
3/3: running   [==================================================>]
verify: Service converged
$

Create a service called sales with 3 replicas using the linuxacademycontent/prices-sales:1 image. Configure the service to use the prices-overlay-net network.
   $ docker service create --name sales --publish target=80,published=83 --replicas=3 --network prices-overlay-net linuxacademycontent/prices-sales:1
kbs13tgydmt3cjla504vgn7en
overall progress: 0 out of 3 tasks
overall progress: 3 out of 3 tasks
1/3: running   [==================================================>]
2/3: running   [==================================================>]
3/3: running   [==================================================>]
verify: Service converged
$
$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE                                     PORTS
ooggkep09c4b        base-price          replicated          3/3                 linuxacademycontent/prices-base-price:1   *:81->80/tcp
kbs13tgydmt3        sales               replicated          3/3                 linuxacademycontent/prices-sales:1        *:83->80/tcp

Create a service called total-price with 2 replicas using the linuxacademycontent/prices-total-price:1 image. Configure the service to use the prices-overlay-net network. Expose this service's port 80 on port 8080.
   
   $ docker service create --name total-price --publish target=80,published=80 --replicas=2 --network prices-overlay-net linuxacademycontent/prices-total-price:1

keq81k9ncuie3za4v9i1vt1hi
overall progress: 2 out of 2 tasks
1/2: running   [==================================================>]
2/2: running   [==================================================>]
verify: Service converged


$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE                                      PORTS
ooggkep09c4b        base-price          replicated          3/3                 linuxacademycontent/prices-base-price:1    *:81->80/tcp
kbs13tgydmt3        sales               replicated          3/3                 linuxacademycontent/prices-sales:1         *:83->80/tcp
keq81k9ncuie        total-price         replicated          2/2                 linuxacademycontent/prices-total-price:1   *:80->80/tcp

curl http://172.17.0.39:8080

