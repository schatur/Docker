Your team wants to use an application called fluentd to transform log output from containers into a standard format. 
In order to make use of this technology, they have asked you to design a proof-of-concept to demonstrate how this can be done. 
You will need to run a container that generates some log output in a file, then run a second container with fluentd that is able to read the log output from 
the first container, transform it, and output the transformed data to another file on the host machine. 
You do not need to have knowledge of fluentd to complete this task. A fluentd configuration file has already been provided for you.

The proof-of-concept should meet the following specifications:


The first container should be called counter. It will generate some log data for testing by counting numbers.
For the counter container, use the busybox image with the following command: sh -c 'i=0; while true; do echo "$i: $(date)" >> /var/log/test/1.log; i=$((i+1)); sleep 1; done'. This will write some test data to /var/log/test/1.log every second.

$ vi Dockerfile
$ docker build -t busybox:new .
Sending build context to Docker daemon   2.56kB
Step 1/2 : FROM busybox
latest: Pulling from library/busybox
91f30d776fb2: Pull complete
Digest: sha256:9ddee63a712cea977267342e8750ecbc60d3aab25f04ceacfa795e6fce341793
Status: Downloaded newer image for busybox:latest
 ---> c7c37e472d31
Step 2/2 : CMD sh -c 'i=0; while true; do echo "$i: $(date)" >> /var/log/test/1.log; i=$((i+1)); sleep 1; done'
 ---> Running in da90f6f93f43
Removing intermediate container da90f6f93f43
 ---> f5aefc9ab9e1
Successfully built f5aefc9ab9e1
Successfully tagged busybox:new

$ docker run -d --name counter -v test-data:/var/log/test busybox:new
31553ad490aa8ba0c330821790b86be86adb9d602ab7b09113624e96b61361a6

Create a volume called test-data, and mount it to the counter container at /var/log/test. This volume will be shared with the fluentd container so that it can 
read the test data.

docker volume create test-data
