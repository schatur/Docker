Your team wants to use an application called fluentd to transform log output from containers into a standard format. 
In order to make use of this technology, they have asked you to design a proof-of-concept to demonstrate how this can be done. 
You will need to run a container that generates some log output in a file, then run a second container with fluentd that is able to read the log output from 
the first container, transform it, and output the transformed data to another file on the host machine. 
You do not need to have knowledge of fluentd to complete this task. A fluentd configuration file has already been provided for you.

The proof-of-concept should meet the following specifications:


The first container should be called counter. It will generate some log data for testing by counting numbers.
For the counter container, use the busybox image with the following command: sh -c 'i=0; while true; do echo "$i: $(date)" >> /var/log/test/1.log; i=$((i+1)); sleep 1; done'. This will write some test data to /var/log/test/1.log every second.

vi Dockerfile

FROM busybox
CMD sh -c 'i=0; while true; do echo "$i: $(date)" >> /var/log/test/1.log; i=$((i+1)); sleep 1; done'

docker build -t busybox:new .

docker run -d --name counter -v test-data:/var/log/test busybox:new

Create a volume called test-data, and mount it to the counter container at /var/log/test. This volume will be shared with the fluentd container so that it can 
read the test data.

docker volume create test-data
docker run -d --name fluentd -v test-data:/var/log/input \
-rw-r--r-- 1 root root    89 Jun  2 16:11 count.20200602104133_0.log
-rw-r--r-- 1 root root    89 Jun  2 16:11 count.20200602104134_0.log
-rw-r--r-- 1 root root    89 Jun  2 16:11 count.20200602104135_0.log
-rw-r--r-- 1 root root    89 Jun  2 16:11 count.20200602104136_0.log

cat count.20200602104736_0.log






Good luck!
